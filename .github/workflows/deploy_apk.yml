name: Deploy App APK on GitHub Releases

on:
  workflow_run:
    workflows: [Quality Check]
    types: [completed]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: 'temurin'
      #     java-version: '17'
      #
      # - name: Set up Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: "3.24.5"
      #
      # - name: Install dependencies
      #   run: flutter pub get

      # - name: Setup Keystore
      #   run: |
      #     mkdir -p ~/keystores
      #     echo "${{ secrets.KEY_STORE }}" | base64 --decode > android/app/publish_store.jks
      #
      # - name: Setup Keystore
      #   run: |
      #     cat android/app/publish_store.jks
      #
      # - name: Set up key.properties
      #   run: |
      #     echo "storeFile=${{ secrets.KEYSTORE_PATH }}" >> android/key.properties
      #     echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
      #     echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      #     echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      #
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: //g' | cut -d"+" -f1)
          echo "version=$VERSION" >> $GITHUB_ENV

      # - name: Build APK
      #   run: flutter build apk --release
      #
      # - name: Archive APK
      #   run: mkdir -p release && cp build/app/outputs/flutter-apk/app-release.apk release/
      #
      # - name: Rename APK
      #   run: mv release/app-release.apk release/app-release-v${{ env.version }}.apk
      #
      # - name: Upload APK as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: release-apk
      #     path: release/app-release-v${{ env.version }}.apk

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Télécharge l'APK depuis l'étape précédente
      # - name: Download APK artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: release-apk

      - name: Upload APK to GitHub Release
        run: echo "${{ needs.build.outputs.version }}"
        # uses: ncipollo/release-action@v1
        # with:
        #   artifacts: app-release-v${{ env.version }}.apk
        #   tag: v${{ env.version }}
        #   token: ${{ secrets.TOKEN }}
        #   name: "Flutter release v${{ env.version }}"
        #   body: |
        #     Ceci est un test de déploiement d'APK sur GitHub Releases.


